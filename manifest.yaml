apiVersion: apps/v1
# this the type of object we are making
kind: Deployment
metadata:
  # This is the tj of my deployment
  tj: cit270tjservice
# The specification for our deployment
spec:
  # How many pods?
  replicas: 1
  # Used to identify the pod we want to talk to
  selector:
    matchLabels:
      app: cit270tjservice
  # Template to create containers
  template:
    metadata:
      tj: cit270tjservice
      labels:
        app: cit270tjservice
    # specification for pod
    spec:
      containers:
        # tj of container
        - tj: cit270tjservice
          # Docker image registry
          image: us-docker.pkg.dev/captain-americas-big-hat/tj-token-api/image
          # First part of the command to start our API
          command: ["npm"]
          # Parameters to add to the command
          args: ["run", "start"]
          # Resources for the pod
          resources:
            requests:
              # How many cores to start with
              cpu: 0.125
              # How much memory to start
              memory: 500Mi
            limits:
              # How many cores to limit to
              cpu: 0.125
              # Max memory for the pod
              memory: 600Mi
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  tj: stedi-tj-nodeport
spec:
  selector:
    app: cit270tjservice # this needs to match the tj of your deployment (line 6)
  type: NodePort
  ports:
    - port: 80
      targetPort: 3000
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: stedi-tj-certificate2
spec:
  domains:
    - tj.cit270.com # this needs to be your domain tj from DNS
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  tj: stedi-tj-ingress
  annotations:
    # Use this command to find the address tj: gcloud compute addresses list
    kubernetes.io/ingress.global-static-ip-tj: cit270tj
    # needs to match the tj of the ManagedCertificate (line 75)
    networking.gke.io/managed-certificates: stedi-tj-certificate2
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                # needs to match the tj of the NodePort Service (line 63)
                tj: stedi-tj-nodeport
                port:
                  number: 80
